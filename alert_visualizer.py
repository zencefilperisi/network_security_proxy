import matplotlib.pyplot as plt
import datetime
from collections import Counter
import re

# alert.log dosyasÄ±nÄ± oku
with open("logs/alert.log", "r", encoding="utf-8") as f:
    lines = f.readlines()

# TÃ¼r ve saat bilgilerini ayÄ±r
alert_types = []
alert_hours = []

for line in lines:
    # TÃ¼r belirleme
    if "Suspicious URL" in line:
        alert_types.append("URL")
    elif "Suspicious POST" in line:
        alert_types.append("POST")
    elif "Large POST" in line:
        alert_types.append("Large POST")
    elif "Brute-force" in line:
        alert_types.append("Brute-force")
    else:
        alert_types.append("Other")

    # Saat bilgisi Ã§Ä±kar
    match = re.search(r"at (\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})", line)
if match:
    timestamp = datetime.datetime.strptime(match.group(1), "%Y-%m-%d %H:%M:%S")
    hour = timestamp.strftime("%Y-%m-%d %H:00")
    alert_hours.append(hour)

# Alarm tÃ¼rÃ¼ sayÄ±mÄ±
type_counts = Counter(alert_types)

# Saatlik alarm yoÄŸunluÄŸu
hour_counts = Counter(alert_hours)

# ğŸ“Š Grafik 1: Alarm TÃ¼rÃ¼ DaÄŸÄ±lÄ±mÄ±
plt.figure(figsize=(6, 4))
plt.bar(type_counts.keys(), type_counts.values(), color="crimson")
plt.title("Alarm TÃ¼rÃ¼ DaÄŸÄ±lÄ±mÄ±")
plt.xlabel("Alarm TÃ¼rÃ¼")
plt.ylabel("SayÄ±")
plt.tight_layout()
plt.grid(axis='y')
plt.show()

# ğŸ“ˆ Grafik 2: Saat BazlÄ± Alarm SayÄ±sÄ±
plt.figure(figsize=(10, 4))
hours_sorted = sorted(hour_counts.items())
hours, counts = zip(*hours_sorted)
plt.plot(hours, counts, marker="o", color="darkblue")
plt.title("Saatlik Alarm YoÄŸunluÄŸu")
plt.xlabel("Zaman (Saat)")
plt.ylabel("Alarm SayÄ±sÄ±")
plt.xticks(rotation=45)
plt.tight_layout()
plt.grid()
plt.show()
